[metadata]
name = sphinx-example-index
author = Astropy Developers
author_email = hi@jsick.codes
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://sphinx-example-index.reathedocs.io
description = Sphinx extension for collecting examples from narrative documentation.
long_description = file: README.rst,CHANGELOG.rst,licenses/LICENSE.rst,licenses/TEMPLATE_LICENSE.rst
long_description_content_type = text/x-rst
project_urls =
    Source code = https://github.com/astropy/sphinx-example-index
    Issue tracker = https://github.com/astropy/sphinx-example-index/issues
classifiers =
    Development Status :: 4 - Beta
    License :: OSI Approved :: BSD License
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Framework :: Sphinx
    Framework :: Sphinx :: Extension
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Natural Language :: English
    Topic :: Documentation
    Topic :: Documentation :: Sphinx
    Topic :: Software Development :: Documentation

[options]
zip_safe = False
packages = find:
package_dir =
    = src
include_package_data = True
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires =
    sphinx
    beautifulsoup4

[options.extras_require]
test =
    pytest-astropy
docs =
    astropy-sphinx-theme
    numpydoc
    sphinx-automodapi
    importlib_metadata; python_version < "3.8"

[options.packages.find]
where = src

[tool:pytest]
testpaths = "tests" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
branch = True
source =
    sphinx_example_index

[coverage:paths]
source =
    src
    .tox/*/site-packages

[coverage:report]
show_missing = true
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
    if TYPE_CHECKING:

[flake8]
max-line-length = 80
exclude =
    docs/conf.py
    .tox

[mypy]
disallow_untyped_defs = True
disallow_incomplete_defs = True
ignore_missing_imports = True
strict_equality = True
warn_redundant_casts = True
warn_unreachable = True
warn_unused_ignores = True
